# Indigo4L
# SC1721



#^ Event1에서 수행, 1-Host의 Access Check, 2-Ext Flash 접근 권한 부여, 3-상태 저장 
#^ HOST와의 sequence sync는 변수로만 진행. 


###################################################################################################################
###################################################################################################################
###################################################################################################################
## Comp - SAD_APPL_103 IFBd_ExFsh_Ctrl (Interface Board - External Flash Control)
## Unit - Appr_Ctrl (Approval Control)
#@ caller - "SAD_RTC_303 Event1" 

#! Toggle_ExtFlash는 반드시 Boot Seq Cleaning up 단계에서 0x00001111로 초기화 해줘야 함. 

#$	Req_ExtFlash				@IntFlash Sector 41 
#$ 	Auth_ExtFlash				@IntFlash Sector 42 
#$	Host_Req_ExtFlash			@RAM 0x
#$ 	Host_Auth_ExtFlash			@RAM 0x 

#$ 	Toggle_ExtFlash				@RAM	0x600025F8 
#$ 	ExtFlash_Switch_Status		@RAM	0x600025FC


fncBegin					#name:Appr_Ctrl# 
w32	0x00026000	0x00000013		# SPI Mode Change Direct Mode -> Command Sequencer Mode #

### External Flash Access check 
#r32	Usage_ExtFlash
#i4drcheck	0x0000FFFF			# 
#	jmpnamed	always	0		# 접근 가능 
#	jmpnamed	always	0		#name:Exit_Appr_Ctrl# 접근 불가 	

## Int Flash(Sector 41) -> RAM 
i4copy	0x60000400  0x617C9000  4 # Addr, Src, Cnt - Src에서 Cnt만큼의 bytes 수를 Addr로 복사, Addr = RAM, Src = Int Flash #? Argu 변경 필요. 



## Host Request check 
r32 Host_Req_ExtFlash		# Host_Req_ExtFlash, 제어기가 Ext Flash에 접근하길 원하는가? 
i4drcheck   0x0000FFFF      # 
    jmpnamed    always  0   #name:CLOSE_THE_DOOR# 	Host No Request 
    jmpnamed    always  0   #name:OPEN_THE_DOOR# 	Host Request 

## Open the door 
lblnamed                    #name:OPEN_THE_DOOR#     
w32	0x600025FC	0x0000FFFF	# ExtFlash_Switch_Status = (Host&ExtFlash) 
#@ Unit Call 
#% UNIT 전달인자 
r32	0x600025FC				
i4drsave	0				# Buffer[0] = ExtFlash_Switch_Status 
fncCall						#name:SPI_SWT# - #? Host_Req_ExtFlash 값에 종속적. 
#% UNIT 반환인자 - 없음 


## Toggle_ExtFlash variable check 
r32	0x600025F8				# Toggle_ExtFlash, 부팅 시 초기값 0x00001111 
i4drcheck	0x00001111 
	jmpnamed	always	0	#name:TheDoorIsAlreadyOpened# - # vari != 0x00001111, 
	jmpnamed	always	0	#name:Fist_KnockKnock# - #? vari == 0x00001111, -> 값 변경 

lblnamed					#name:TheDoorIsAlreadyOpened# 
#? 이미 열려있으므로, IntFlash에 또 적을 필요 없음. 
jmpnamed	always	0		#name:Exit_Appr_Ctrl# 

lblnamed					#name:Fist_KnockKncok#  
w32	0x600025F8 0x0000FFFF 	# Toggle_ExtFlash 
w32	
w32	Auth_ExtFlash	0x0000FFFF	#? 문 열었다는 승인, IntFlash에 적어야 함. 
#@ Comp Call 
#% COMP 전달인자 
#? <- 추가 할 것 
i4call  STATUS_SAVE         # 
#% COMP 반환인자 - 없음 
jmpnamed	always	0		#name:Exit_Appr_Ctrl# 


## Close the door 
lblnamed                    #name:CLOSE_THE_DOOR# 
w32	0x600025FC	0x00001111	# ExtFlash_Switch_Status = (Indigo&ExtFlash) 
#@ Unit Call 
#% UNIT 전달인자 
r32	0x600025FC				
i4drsave	0				# Buffer[0] = ExtFlash_Switch_Status 
fncCall						#name:SPI_SWT# 문 닫을 것. 
#% UNIT 반환인자 - 없음 

## Toggle_ExtFlash variable check 
r32	0x600025F8 				# Toggle_ExtFlash 
i4drcheck	0x0000FFFF		# if 
	jmpnamed	always	0	#name:Exit_Appr_Ctrl# 
	jmpnamed	always	0	#name:Toggle_Clear# 

## Toggle Clear  	
lblnamed					#name:Toggle_Clear#
w32 0x600025F8 0x00001111 	
w32	Auth_ExtFlash	0x00001111	#? 문 닫혀있다, IntFlash에 적어야 함. 
#@ Comp Call 
#% COMP 전달인자 
#? <- 추가 할 것 
i4call  STATUS_SAVE         # 
#% COMP 반환인자 - 없음 

lblnamed					#name:Exit_Appr_Ctrl# 

fncEnd						#name:Appr_Ctrl# 


###################################################################################################################
###################################################################################################################
###################################################################################################################
## Comp - SAD_APPL_103 IFBd_ExFsh_Ctrl (Interface Board - External Flash Control)
## Unit - SPI_SWT (SPI Switch IC)

#% UNIT 전달인자
#% Buffer[0]	

fncBegin					#name:SPI_SWT# 

i4drrestore	0						# Switch IC 
i4drcheck  0x00001111              
    wf32    0x000A8000  21  1   1   # POSR0 Low : if (Vari == 0x0000FFFF), Host <-> Ext Flash 
    wf32    0x000A8008  21  1   1   # POCR0 Low : if (Vari == 0x00001111), Indigo <-> Ext Flash 

#% UNIT 반환인자 - 없음

fncEnd						#name:SPI_SWT# 










###################################################################################################################
###################################################################################################################
###################################################################################################################

#! V2용 Code , V0에서는 신경 안 써도 됨. 
	#$ SCH Net Name : SPI_EIRQ (GPIO21), GPIO21_CTL = 0x00000854 
	#$              High : Host <-> Ext Flash 
	#$              Low : Indigo <-> Ext Flash 
	#	#$ SCH net name : SPI_EIRQ[GPIO21] (idle - Low, FW - High)
	#	#@ Event1 
	#	#^ 1. SPI_EIRQ check, 2. SPI Switch IC control (Open or Close), 3. Status Save 
	#
	#	fncBegin                            #name:FW_UPDATE_REQUEST_HANDLER# 
	#	## SPI_EIRQ pin check 
	#	#? 해당 pin은 EIRQ이므로 관련된 사항 처리할 것. 
	#	rf32	0x000A8300	21 1	#path:INDIGO4L.GPIO.PIDR0 LOW#
	#	i4drcheck	1		        # IF 
	#		jmpnamed always 0 		#name:# 제어기 접근 요청 X 
	#		jmpnamed always 0 		#name:# 제어기 접근 요청 O 
	#
	#	w32 ExtFlash_Switch_Status  0xFFFFFFFF  # Host <-> Ext Flash 
	#	w32 ExtFlash_Switch_Status  0x00000000  # Indigo <-> Ext Flash 
	#
	#	## SPI Switch IC Control 
	#	i4call Ext_Flash_Control    # SPI Switch IC 
	#
	#	## Status Save 
	#	i4call  STATUS_SAVE         # 
	#
	#	## NO Request 
	#	i4return
#